/*
Green Space Management API

This is the API for the Green Ecolution Management System.

API version: develop
Contact: info@green-ecolution.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TreeClusterInList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TreeClusterInList{}

// TreeClusterInList struct for TreeClusterInList
type TreeClusterInList struct {
	Address        string         `json:"address"`
	Archived       bool           `json:"archived"`
	CreatedAt      string         `json:"created_at"`
	Description    string         `json:"description"`
	Id             int32          `json:"id"`
	LastWatered    *string        `json:"last_watered,omitempty"`
	Latitude       float32        `json:"latitude"`
	Longitude      float32        `json:"longitude"`
	MoistureLevel  float32        `json:"moisture_level"`
	Name           string         `json:"name"`
	Region         *Region        `json:"region,omitempty"`
	SoilCondition  SoilCondition  `json:"soil_condition"`
	TreeIds        []int32        `json:"tree_ids,omitempty"`
	UpdatedAt      string         `json:"updated_at"`
	WateringStatus WateringStatus `json:"watering_status"`
}

type _TreeClusterInList TreeClusterInList

// NewTreeClusterInList instantiates a new TreeClusterInList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTreeClusterInList(address string, archived bool, createdAt string, description string, id int32, latitude float32, longitude float32, moistureLevel float32, name string, soilCondition SoilCondition, updatedAt string, wateringStatus WateringStatus) *TreeClusterInList {
	this := TreeClusterInList{}
	this.Address = address
	this.Archived = archived
	this.CreatedAt = createdAt
	this.Description = description
	this.Id = id
	this.Latitude = latitude
	this.Longitude = longitude
	this.MoistureLevel = moistureLevel
	this.Name = name
	this.SoilCondition = soilCondition
	this.UpdatedAt = updatedAt
	this.WateringStatus = wateringStatus
	return &this
}

// NewTreeClusterInListWithDefaults instantiates a new TreeClusterInList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTreeClusterInListWithDefaults() *TreeClusterInList {
	this := TreeClusterInList{}
	return &this
}

// GetAddress returns the Address field value
func (o *TreeClusterInList) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *TreeClusterInList) SetAddress(v string) {
	o.Address = v
}

// GetArchived returns the Archived field value
func (o *TreeClusterInList) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *TreeClusterInList) SetArchived(v bool) {
	o.Archived = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TreeClusterInList) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TreeClusterInList) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDescription returns the Description field value
func (o *TreeClusterInList) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *TreeClusterInList) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *TreeClusterInList) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TreeClusterInList) SetId(v int32) {
	o.Id = v
}

// GetLastWatered returns the LastWatered field value if set, zero value otherwise.
func (o *TreeClusterInList) GetLastWatered() string {
	if o == nil || IsNil(o.LastWatered) {
		var ret string
		return ret
	}
	return *o.LastWatered
}

// GetLastWateredOk returns a tuple with the LastWatered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetLastWateredOk() (*string, bool) {
	if o == nil || IsNil(o.LastWatered) {
		return nil, false
	}
	return o.LastWatered, true
}

// HasLastWatered returns a boolean if a field has been set.
func (o *TreeClusterInList) HasLastWatered() bool {
	if o != nil && !IsNil(o.LastWatered) {
		return true
	}

	return false
}

// SetLastWatered gets a reference to the given string and assigns it to the LastWatered field.
func (o *TreeClusterInList) SetLastWatered(v string) {
	o.LastWatered = &v
}

// GetLatitude returns the Latitude field value
func (o *TreeClusterInList) GetLatitude() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetLatitudeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Latitude, true
}

// SetLatitude sets field value
func (o *TreeClusterInList) SetLatitude(v float32) {
	o.Latitude = v
}

// GetLongitude returns the Longitude field value
func (o *TreeClusterInList) GetLongitude() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetLongitudeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Longitude, true
}

// SetLongitude sets field value
func (o *TreeClusterInList) SetLongitude(v float32) {
	o.Longitude = v
}

// GetMoistureLevel returns the MoistureLevel field value
func (o *TreeClusterInList) GetMoistureLevel() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MoistureLevel
}

// GetMoistureLevelOk returns a tuple with the MoistureLevel field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetMoistureLevelOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MoistureLevel, true
}

// SetMoistureLevel sets field value
func (o *TreeClusterInList) SetMoistureLevel(v float32) {
	o.MoistureLevel = v
}

// GetName returns the Name field value
func (o *TreeClusterInList) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TreeClusterInList) SetName(v string) {
	o.Name = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *TreeClusterInList) GetRegion() Region {
	if o == nil || IsNil(o.Region) {
		var ret Region
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetRegionOk() (*Region, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *TreeClusterInList) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given Region and assigns it to the Region field.
func (o *TreeClusterInList) SetRegion(v Region) {
	o.Region = &v
}

// GetSoilCondition returns the SoilCondition field value
func (o *TreeClusterInList) GetSoilCondition() SoilCondition {
	if o == nil {
		var ret SoilCondition
		return ret
	}

	return o.SoilCondition
}

// GetSoilConditionOk returns a tuple with the SoilCondition field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetSoilConditionOk() (*SoilCondition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SoilCondition, true
}

// SetSoilCondition sets field value
func (o *TreeClusterInList) SetSoilCondition(v SoilCondition) {
	o.SoilCondition = v
}

// GetTreeIds returns the TreeIds field value if set, zero value otherwise.
func (o *TreeClusterInList) GetTreeIds() []int32 {
	if o == nil || IsNil(o.TreeIds) {
		var ret []int32
		return ret
	}
	return o.TreeIds
}

// GetTreeIdsOk returns a tuple with the TreeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetTreeIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.TreeIds) {
		return nil, false
	}
	return o.TreeIds, true
}

// HasTreeIds returns a boolean if a field has been set.
func (o *TreeClusterInList) HasTreeIds() bool {
	if o != nil && !IsNil(o.TreeIds) {
		return true
	}

	return false
}

// SetTreeIds gets a reference to the given []int32 and assigns it to the TreeIds field.
func (o *TreeClusterInList) SetTreeIds(v []int32) {
	o.TreeIds = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *TreeClusterInList) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *TreeClusterInList) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetWateringStatus returns the WateringStatus field value
func (o *TreeClusterInList) GetWateringStatus() WateringStatus {
	if o == nil {
		var ret WateringStatus
		return ret
	}

	return o.WateringStatus
}

// GetWateringStatusOk returns a tuple with the WateringStatus field value
// and a boolean to check if the value has been set.
func (o *TreeClusterInList) GetWateringStatusOk() (*WateringStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WateringStatus, true
}

// SetWateringStatus sets field value
func (o *TreeClusterInList) SetWateringStatus(v WateringStatus) {
	o.WateringStatus = v
}

func (o TreeClusterInList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TreeClusterInList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["archived"] = o.Archived
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["description"] = o.Description
	toSerialize["id"] = o.Id
	if !IsNil(o.LastWatered) {
		toSerialize["last_watered"] = o.LastWatered
	}
	toSerialize["latitude"] = o.Latitude
	toSerialize["longitude"] = o.Longitude
	toSerialize["moisture_level"] = o.MoistureLevel
	toSerialize["name"] = o.Name
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	toSerialize["soil_condition"] = o.SoilCondition
	if !IsNil(o.TreeIds) {
		toSerialize["tree_ids"] = o.TreeIds
	}
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["watering_status"] = o.WateringStatus
	return toSerialize, nil
}

func (o *TreeClusterInList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"archived",
		"created_at",
		"description",
		"id",
		"latitude",
		"longitude",
		"moisture_level",
		"name",
		"soil_condition",
		"updated_at",
		"watering_status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTreeClusterInList := _TreeClusterInList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTreeClusterInList)

	if err != nil {
		return err
	}

	*o = TreeClusterInList(varTreeClusterInList)

	return err
}

type NullableTreeClusterInList struct {
	value *TreeClusterInList
	isSet bool
}

func (v NullableTreeClusterInList) Get() *TreeClusterInList {
	return v.value
}

func (v *NullableTreeClusterInList) Set(val *TreeClusterInList) {
	v.value = val
	v.isSet = true
}

func (v NullableTreeClusterInList) IsSet() bool {
	return v.isSet
}

func (v *NullableTreeClusterInList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTreeClusterInList(val *TreeClusterInList) *NullableTreeClusterInList {
	return &NullableTreeClusterInList{value: val, isSet: true}
}

func (v NullableTreeClusterInList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTreeClusterInList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
