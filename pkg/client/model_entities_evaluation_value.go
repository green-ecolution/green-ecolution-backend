/*
Green Space Management API

This is the API for the Green Ecolution Management System.

API version: develop
Contact: info@green-ecolution.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the EntitiesEvaluationValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitiesEvaluationValue{}

// EntitiesEvaluationValue struct for EntitiesEvaluationValue
type EntitiesEvaluationValue struct {
	ConsumedWater  *float32 `json:"consumedWater,omitempty"`
	TreeClusterID  *int32   `json:"treeClusterID,omitempty"`
	WateringPlanID *int32   `json:"wateringPlanID,omitempty"`
}

// NewEntitiesEvaluationValue instantiates a new EntitiesEvaluationValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitiesEvaluationValue() *EntitiesEvaluationValue {
	this := EntitiesEvaluationValue{}
	return &this
}

// NewEntitiesEvaluationValueWithDefaults instantiates a new EntitiesEvaluationValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitiesEvaluationValueWithDefaults() *EntitiesEvaluationValue {
	this := EntitiesEvaluationValue{}
	return &this
}

// GetConsumedWater returns the ConsumedWater field value if set, zero value otherwise.
func (o *EntitiesEvaluationValue) GetConsumedWater() float32 {
	if o == nil || IsNil(o.ConsumedWater) {
		var ret float32
		return ret
	}
	return *o.ConsumedWater
}

// GetConsumedWaterOk returns a tuple with the ConsumedWater field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesEvaluationValue) GetConsumedWaterOk() (*float32, bool) {
	if o == nil || IsNil(o.ConsumedWater) {
		return nil, false
	}
	return o.ConsumedWater, true
}

// HasConsumedWater returns a boolean if a field has been set.
func (o *EntitiesEvaluationValue) HasConsumedWater() bool {
	if o != nil && !IsNil(o.ConsumedWater) {
		return true
	}

	return false
}

// SetConsumedWater gets a reference to the given float32 and assigns it to the ConsumedWater field.
func (o *EntitiesEvaluationValue) SetConsumedWater(v float32) {
	o.ConsumedWater = &v
}

// GetTreeClusterID returns the TreeClusterID field value if set, zero value otherwise.
func (o *EntitiesEvaluationValue) GetTreeClusterID() int32 {
	if o == nil || IsNil(o.TreeClusterID) {
		var ret int32
		return ret
	}
	return *o.TreeClusterID
}

// GetTreeClusterIDOk returns a tuple with the TreeClusterID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesEvaluationValue) GetTreeClusterIDOk() (*int32, bool) {
	if o == nil || IsNil(o.TreeClusterID) {
		return nil, false
	}
	return o.TreeClusterID, true
}

// HasTreeClusterID returns a boolean if a field has been set.
func (o *EntitiesEvaluationValue) HasTreeClusterID() bool {
	if o != nil && !IsNil(o.TreeClusterID) {
		return true
	}

	return false
}

// SetTreeClusterID gets a reference to the given int32 and assigns it to the TreeClusterID field.
func (o *EntitiesEvaluationValue) SetTreeClusterID(v int32) {
	o.TreeClusterID = &v
}

// GetWateringPlanID returns the WateringPlanID field value if set, zero value otherwise.
func (o *EntitiesEvaluationValue) GetWateringPlanID() int32 {
	if o == nil || IsNil(o.WateringPlanID) {
		var ret int32
		return ret
	}
	return *o.WateringPlanID
}

// GetWateringPlanIDOk returns a tuple with the WateringPlanID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesEvaluationValue) GetWateringPlanIDOk() (*int32, bool) {
	if o == nil || IsNil(o.WateringPlanID) {
		return nil, false
	}
	return o.WateringPlanID, true
}

// HasWateringPlanID returns a boolean if a field has been set.
func (o *EntitiesEvaluationValue) HasWateringPlanID() bool {
	if o != nil && !IsNil(o.WateringPlanID) {
		return true
	}

	return false
}

// SetWateringPlanID gets a reference to the given int32 and assigns it to the WateringPlanID field.
func (o *EntitiesEvaluationValue) SetWateringPlanID(v int32) {
	o.WateringPlanID = &v
}

func (o EntitiesEvaluationValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitiesEvaluationValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConsumedWater) {
		toSerialize["consumedWater"] = o.ConsumedWater
	}
	if !IsNil(o.TreeClusterID) {
		toSerialize["treeClusterID"] = o.TreeClusterID
	}
	if !IsNil(o.WateringPlanID) {
		toSerialize["wateringPlanID"] = o.WateringPlanID
	}
	return toSerialize, nil
}

type NullableEntitiesEvaluationValue struct {
	value *EntitiesEvaluationValue
	isSet bool
}

func (v NullableEntitiesEvaluationValue) Get() *EntitiesEvaluationValue {
	return v.value
}

func (v *NullableEntitiesEvaluationValue) Set(val *EntitiesEvaluationValue) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitiesEvaluationValue) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitiesEvaluationValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitiesEvaluationValue(val *EntitiesEvaluationValue) *NullableEntitiesEvaluationValue {
	return &NullableEntitiesEvaluationValue{value: val, isSet: true}
}

func (v NullableEntitiesEvaluationValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitiesEvaluationValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
